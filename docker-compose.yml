version: '2.1'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.2
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_TICK_TIME: '2000'
      ZOOKEEPER_SERVERS: 'zookeeper:22888:23888'
    ports:
      - '2181:2181'
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.2
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: 'r1'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_SCHEMA_REGISTRY_URL: 'schemaregistry:8085'
      KAFKA_JMX_PORT: 9991
  schemaregistry:
    image: confluentinc/cp-schema-registry:5.5.2
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8085'
    ports:
      - 8085:8085
  mongodb:
    image: mongo:4.4
    network_mode: 'host'
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
      interval: 10s
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']
    ports:
      - 27017:27017
